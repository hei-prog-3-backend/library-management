openapi: 3.0.3
info:
  title: Library API
  version: 1.1.0
  description: STD22001
servers:
  - url: https://library.com

paths:
  /books:
    get:
      tags:
        - Books
      summary: Get all books with pagination
      description: Retrieve a list of books with pagination support
      operationId: getBooks
      parameters:
        - in: query
          name: bookName
          description: Filter return books by given name
          required: false
          schema:
            type: string
        - in: query
          name: releaseDateMin
          description: Filter books by release date start
          required: false
          schema:
            type: string
            format: date
        - in: query
          name: releaseDateMax
          description: Filter books by release date end
          required: false
          schema:
            type: string
            format: date
        - in: query
          name: page
          description: Page number for pagination
          required: false
          schema:
            type: integer
            default: 1
        - in: query
          name: pageSize
          description: Number of items per page
          required: false
          schema:
            type: integer
            default: 50
      responses:
        200:
          description: The list of filtered books
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Book'
    put:
      tags:
        - Books
      summary: Create or update a list of books
      operationId: crupdateBooks
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CrupdateBook'
      responses:
        200:
          description: The list of created or updated books
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Book'

  /authors:
    get:
      tags:
        - Authors
      summary: Get all authors with pagination
      description: Retrieve a list of authors with pagination support
      operationId: getAuthors
      parameters:
        - in: query
          name: authorName
          description: Filter authors by name
          required: false
          schema:
            type: string
        - in: query
          name: page
          description: Page number for pagination
          required: false
          schema:
            type: integer
            default: 1
        - in: query
          name: pageSize
          description: Number of items per page
          required: false
          schema:
            type: integer
            default: 50
      responses:
        200:
          description: The list of filtered authors
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Author'

  /topics:
    get:
      tags:
        - Topics
      summary: Get all topics with pagination
      description: Retrieve a list of topics with pagination support
      operationId: getTopics
      parameters:
        - in: query
          name: topicName
          description: Filter topics by name
          required: false
          schema:
            type: string
        - in: query
          name: page
          description: Page number for pagination
          required: false
          schema:
            type: integer
            default: 1
        - in: query
          name: pageSize
          description: Number of items per page
          required: false
          schema:
            type: integer
            default: 50
      responses:
        200:
          description: The list of filtered topics
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Topic'
