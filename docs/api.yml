openapi: 3.0.3
info:
  title: Library API
  version: 1.0.0  
  description: STD22092  
servers:
  - url: https://library.com
  paths:
  /books:
    get:
      summary: Get all books
      description: The returned books are ordered by updated datetime.
      operationId: getBooks
      parameters:
        - in: query
          name: bookName
          description: Filter return books by given name
          required: false
          schema:
            type: string
        - in: query
          name: releaseDateStart
          description: Filter books by a start date for releaseDate
          required: false
          schema:
            type: string
            format: date
        - in: query
          name: releaseDateEnd
          description: Filter books by an end date for releaseDate
          required: false
          schema:
            type: string
            format: date
        - in: query
          name: page
          description: Page number for pagination
          required: false
          schema:
            type: integer
            default: 1
        - in: query
          name: pageSize
          description: Number of items per page
          required: false
          schema:
            type: integer
            default: 50
      responses:
        200:
          description: The list of filtered books
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Book'
    put:
      summary: Create or update a list of books
      operationId: crupdateBooks
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CrupdateBook'
      responses:
        200:
          description: The list of created or updated books
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Book'
  /books/{bookId}/authors/{authorId}:
    put:
      summary: Attach an Author to a Book
      description: Attach an Author to a Book by specifying their IDs.
      operationId: attachAuthorToBook
      parameters:
        - in: path
          name: bookId
          description: ID of the book
          required: true
          schema:
            type: string
        - in: path
          name: authorId
          description: ID of the author
          required: true
          schema:
            type: string
  /books/authors:
    put:
      summary: Attach Authors to Books
      description: Attach multiple Authors to multiple Books by specifying their IDs.
      operationId: attachAuthorsToBooks
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/UpdateBookAuthor'
      responses:
        200:
          description: The updated books with attached authors
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Book'

